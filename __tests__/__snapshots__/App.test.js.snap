// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      pointerEvents="auto"
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="auto"
        removeClippedSubviews={false}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          style={
            Array [
              Object {
                "flex": 1,
              },
              Object {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "zIndex": 1,
                }
              }
            >
              <View
                accessibilityElementsHidden={false}
                importantForAccessibility="auto"
                onLayout={[Function]}
                pointerEvents="box-none"
                style={null}
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                      "zIndex": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "rgb(255, 255, 255)",
                        "borderBottomColor": "rgb(216, 216, 216)",
                        "flex": 1,
                        "shadowColor": "rgb(216, 216, 216)",
                        "shadowOffset": Object {
                          "height": 0.5,
                          "width": 0,
                        },
                        "shadowOpacity": 0.85,
                        "shadowRadius": 0,
                      }
                    }
                  />
                </View>
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "height": 64,
                      "maxHeight": undefined,
                      "minHeight": undefined,
                      "opacity": undefined,
                      "transform": undefined,
                    }
                  }
                >
                  <View
                    pointerEvents="none"
                    style={
                      Object {
                        "height": 20,
                      }
                    }
                  />
                  <View
                    pointerEvents="box-none"
                    style={
                      Object {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      pointerEvents="box-none"
                      style={
                        Object {
                          "marginHorizontal": 16,
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityRole="header"
                        aria-level="1"
                        numberOfLines={1}
                        onLayout={[Function]}
                        style={
                          Object {
                            "color": "rgb(28, 28, 30)",
                            "fontSize": 17,
                            "fontWeight": "600",
                          }
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                />
                <View
                  accessibilityElementsHidden={false}
                  closing={false}
                  gestureVelocityImpact={0.3}
                  importantForAccessibility="auto"
                  onClose={[Function]}
                  onGestureBegin={[Function]}
                  onGestureCanceled={[Function]}
                  onGestureEnd={[Function]}
                  onOpen={[Function]}
                  onTransition={[Function]}
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "overflow": undefined,
                      },
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                    ]
                  }
                  transitionSpec={
                    Object {
                      "close": Object {
                        "animation": "spring",
                        "config": Object {
                          "damping": 500,
                          "mass": 3,
                          "overshootClamping": true,
                          "restDisplacementThreshold": 10,
                          "restSpeedThreshold": 10,
                          "stiffness": 1000,
                        },
                      },
                      "open": Object {
                        "animation": "spring",
                        "config": Object {
                          "damping": 500,
                          "mass": 3,
                          "overshootClamping": true,
                          "restDisplacementThreshold": 10,
                          "restSpeedThreshold": 10,
                          "stiffness": 1000,
                        },
                      },
                    }
                  }
                >
                  <View
                    needsOffscreenAlphaCompositing={false}
                    pointerEvents="box-none"
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      forwardedRef={[Function]}
                      onGestureHandlerEvent={[Function]}
                      onGestureHandlerStateChange={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "transform": Array [
                            Object {
                              "translateX": 0,
                            },
                            Object {
                              "translateX": 0,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        pointerEvents="none"
                        style={
                          Object {
                            "backgroundColor": "rgb(242, 242, 242)",
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 1,
                              "width": -1,
                            },
                            "shadowOpacity": 0.3,
                            "shadowRadius": 5,
                            "top": 0,
                            "width": 3,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "overflow": "hidden",
                            },
                            Array [
                              Object {
                                "backgroundColor": "rgb(242, 242, 242)",
                              },
                              undefined,
                            ],
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "flex": 1,
                              "flexDirection": "column-reverse",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <RCTSafeAreaView
                              emulateUnlessSupported={true}
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#fff",
                                  },
                                ]
                              }
                            >
                              <RCTScrollView
                                data={null}
                                disableVirtualization={false}
                                getItem={[Function]}
                                getItemCount={[Function]}
                                horizontal={false}
                                initialNumToRender={10}
                                keyExtractor={[Function]}
                                maxToRenderPerBatch={10}
                                onContentSizeChange={[Function]}
                                onEndReachedThreshold={2}
                                onLayout={[Function]}
                                onMomentumScrollEnd={[Function]}
                                onScroll={[Function]}
                                onScrollBeginDrag={[Function]}
                                onScrollEndDrag={[Function]}
                                renderItem={[Function]}
                                scrollEventThrottle={50}
                                stickyHeaderIndices={Array []}
                                updateCellsBatchingPeriod={50}
                                windowSize={21}
                              >
                                <View />
                              </RCTScrollView>
                            </RCTSafeAreaView>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    pointerEvents="auto"
    style={
      Object {
        "backgroundColor": "rgb(255, 255, 255)",
        "borderTopColor": "rgb(216, 216, 216)",
        "borderTopWidth": 0.5,
        "bottom": 0,
        "elevation": 8,
        "height": 49,
        "left": 0,
        "paddingBottom": 0,
        "paddingHorizontal": 0,
        "position": null,
        "right": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityLabel="Sets, tab, 1 of 2"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "selected": true,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "flexDirection": "column",
              "justifyContent": "flex-end",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <MaterialCommunityIcons
              color="#e91e63"
              name="pokeball"
              size={25}
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 0,
                },
              ]
            }
          >
            <MaterialCommunityIcons
              color="#8E8E8F"
              name="pokeball"
              size={25}
            />
          </View>
        </View>
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "textAlign": "center",
              },
              Object {
                "color": "#e91e63",
              },
              Object {
                "fontSize": 10,
              },
              undefined,
            ]
          }
        >
          Sets
        </Text>
      </View>
      <View
        accessibilityLabel="Collection, tab, 2 of 2"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "selected": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "flexDirection": "column",
              "justifyContent": "flex-end",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 0,
                },
              ]
            }
          >
            <MaterialCommunityIcons
              color="#e91e63"
              name="cards"
              size={25}
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <MaterialCommunityIcons
              color="#8E8E8F"
              name="cards"
              size={25}
            />
          </View>
        </View>
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "textAlign": "center",
              },
              Object {
                "color": "#8E8E8F",
              },
              Object {
                "fontSize": 10,
              },
              undefined,
            ]
          }
        >
          Collection
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
